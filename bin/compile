#!/usr/bin/env bash

# Ensure wildcards in globs match dotfiles too.
shopt -s dotglob

indent() {
    sed -u 's/^/      /'
}

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"
STAGE="$(mktemp -d)"

if [ ! -f "${ENV_DIR}/APP_BASE" ]; then
    echo "APP_BASE was not set. Aborting" | indent
    exit 1
fi

if [ ! -f "${ENV_DIR}/LANDING_VIEW_BASE" ]; then
    echo "LANDING_VIEW_BASE was not set. Aborting" | indent
    exit 1
fi

if [ ! -f "${ENV_DIR}/REACT_VIEW_BASE" ]; then
    echo "REACT_VIEW_BASE was not set. Aborting" | indent
    exit 1
fi

APP_BASE="$(cat "${ENV_DIR}/APP_BASE")"
LANDING_VIEW_BASE="$(cat "${ENV_DIR}/LANDING_VIEW_BASE")"
REACT_VIEW_BASE="$(cat "${ENV_DIR}/REACT_VIEW_BASE")"

(
    mkdir -p "${STAGE}/packages/$(basename "$LANDING_VIEW_BASE")" "${STAGE}/packages/$(basename "$REACT_VIEW_BASE")" &&
    mv "${BUILD_DIR}/${APP_BASE}" "${STAGE}" &&
    mv "${BUILD_DIR}/${LANDING_VIEW_BASE}" "${STAGE}/packages" &&
    mv "${BUILD_DIR}/${REACT_VIEW_BASE}" "${STAGE}/packages" &&
    echo "logging builddir" &&
    find ${BUILD_DIR} -maxdepth 4 -mindepth 2 &&
    echo "logging STAGE" &&
    find ${STAGE} -maxdepth 4 -mindepth 2 &&
    rm -rf "${BUILD_DIR}"/* &&
    mkdir -p "${BUILD_DIR}/packages/$(basename "$LANDING_VIEW_BASE")" "${STAGE}/packages/$(basename "$REACT_VIEW_BASE")" &&
    mv "${STAGE}/$(basename "$APP_BASE")"/* "${BUILD_DIR}" &&
    mv "${STAGE}/packages/$(basename "$LANDING_VIEW_BASE")"/* "${BUILD_DIR}/packages/$(basename "$LANDING_VIEW_BASE")" &&
    mv "${STAGE}/packages/$(basename "$LANDING_VIEW_BASE")"/* "${BUILD_DIR}/packages/$(basename "$LANDING_VIEW_BASE")" &&
    find . -maxdepth 4 -mindepth 2
)

if [ $? -ne 0 ]; then
    echo "FAILED to copy directory into place" | indent
    exit 1
fi

echo "Copied ${APP_BASE} to root of app successfully" | indent

